/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post100, git sha1 a1bb0255d) */

(* top =  1  *)
(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:31" *)
(* generator = "Amaranth" *)
module top(clk, rst, uo_out, ui_in);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire \$1 ;
  wire \$2 ;
  reg [4:0] \$3 ;
  reg [4:0] \$4 ;
  reg [4:0] \$5  = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:17" *)
  wire [2:0] cmd;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  wire en;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:22" *)
  wire [2:0] \en$21 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  wire \en$22 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  wire \en$23 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  wire \en$24 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  wire inc;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:25" *)
  wire [2:0] \inc$36 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  wire \inc$37 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  wire \inc$38 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  wire \inc$39 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:18" *)
  wire [2:0] is_at_turnover;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  wire \is_at_turnover$41 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  wire \is_at_turnover$42 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  wire \is_at_turnover$43 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  wire [4:0] left_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  wire [4:0] \left_in$15 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  wire [4:0] \left_in$17 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  wire [4:0] left_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  wire [4:0] \left_out$10 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  wire [4:0] \left_out$12 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  wire [4:0] \left_out$14 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  wire load_ring;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:24" *)
  wire \load_ring$31 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  wire \load_ring$32 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  wire \load_ring$33 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  wire \load_ring$34 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  wire load_start;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:23" *)
  wire \load_start$26 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  wire \load_start$27 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  wire \load_start$28 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  wire \load_start$29 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:21" *)
  wire ready;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  wire [4:0] right_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  wire [4:0] \right_in$11 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  wire [4:0] \right_in$7 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  wire [4:0] \right_in$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:38" *)
  wire [4:0] right_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  wire [4:0] \right_out$16 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  wire [4:0] \right_out$18 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  wire [4:0] \right_out$19 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:39" *)
  reg [4:0] right_out_ff1 = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input rst;
  wire rst;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:9" *)
  input [7:0] ui_in;
  wire [7:0] ui_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:10" *)
  output [5:0] uo_out;
  wire [5:0] uo_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:10" *)
  always @(posedge clk)
    \$5  <= \$4 ;
  assign \$1  = ui_in[7:5] == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:52" *) 3'h4;
  assign \$2  = ready & (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:52" *) \$1 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:39" *)
  always @(posedge clk)
    right_out_ff1 <= \$3 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:36" *)
  \top.fsm  fsm (
    .clk(clk),
    .cmd(ui_in[7:5]),
    .en(\en$21 ),
    .inc(\inc$36 ),
    .is_at_turnover(is_at_turnover),
    .load_ring(load_ring),
    .load_start(load_start),
    .ready(ready),
    .rst(rst)
  );
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:32" *)
  \top.r0  r0 (
    .clk(clk),
    .en(\en$21 [0]),
    .inc(\inc$36 [0]),
    .is_at_turnover(\is_at_turnover$41 ),
    .left_in(\left_in$17 ),
    .left_out(\right_in$7 ),
    .load_ring(load_ring),
    .load_start(load_start),
    .right_in(ui_in[4:0]),
    .right_out(right_out),
    .rst(rst)
  );
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:33" *)
  \top.r1  r1 (
    .clk(clk),
    .en(\en$21 [1]),
    .inc(\inc$36 [1]),
    .is_at_turnover(\is_at_turnover$42 ),
    .left_in(\left_in$15 ),
    .left_out(\right_in$9 ),
    .load_ring(load_ring),
    .load_start(load_start),
    .right_in(\right_in$7 ),
    .right_out(\left_in$17 ),
    .rst(rst)
  );
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:34" *)
  \top.r2  r2 (
    .clk(clk),
    .en(\en$21 [2]),
    .inc(\inc$36 [2]),
    .is_at_turnover(\is_at_turnover$43 ),
    .left_in(left_in),
    .left_out(\right_in$11 ),
    .load_ring(load_ring),
    .load_start(load_start),
    .right_in(\right_in$9 ),
    .right_out(\left_in$15 ),
    .rst(rst)
  );
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:35" *)
  \top.ref  \ref  (
    .clk(clk),
    .left_out(left_in),
    .right_in(\right_in$11 ),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$4  = \$5 ;
    if (\$2 ) begin
      \$4  = right_out_ff1;
    end
    if (rst) begin
      \$4  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$3  = right_out;
    if (rst) begin
      \$3  = 5'h00;
    end
  end
  assign right_in = ui_in[4:0];
  assign left_out = \right_in$7 ;
  assign \left_out$10  = \right_in$9 ;
  assign \left_out$12  = \right_in$11 ;
  assign \left_out$14  = left_in;
  assign \right_out$16  = \left_in$15 ;
  assign \right_out$18  = \left_in$17 ;
  assign \right_out$19  = right_out;
  assign en = \en$21 [0];
  assign \en$22  = \en$21 [1];
  assign \en$23  = \en$21 [2];
  assign \en$24  = 1'h0;
  assign \load_start$26  = load_start;
  assign \load_start$27  = load_start;
  assign \load_start$28  = load_start;
  assign \load_start$29  = 1'h0;
  assign \load_ring$31  = load_ring;
  assign \load_ring$32  = load_ring;
  assign \load_ring$33  = load_ring;
  assign \load_ring$34  = 1'h0;
  assign inc = \inc$36 [0];
  assign \inc$37  = \inc$36 [1];
  assign \inc$38  = \inc$36 [2];
  assign \inc$39  = 1'h0;
  assign cmd = ui_in[7:5];
  assign uo_out = { ready, \$5  };
  assign is_at_turnover[2] = \is_at_turnover$43 ;
  assign is_at_turnover[1] = \is_at_turnover$42 ;
  assign is_at_turnover[0] = \is_at_turnover$41 ;
endmodule

(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:32" *)
(* generator = "Amaranth" *)
module \top.fsm (clk, rst, is_at_turnover, en, ready, load_start, load_ring, inc, cmd);
  reg \$auto$verilog_backend.cc:2352:dump_module$2  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire [2:0] \$13 ;
  wire \$14 ;
  wire [2:0] \$15 ;
  reg [1:0] \$16 ;
  reg [3:0] \$17 ;
  reg [2:0] \$18 ;
  reg \$19 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:33" *)
  reg [1:0] active = 2'h0;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:17" *)
  input [2:0] cmd;
  wire [2:0] cmd;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:35" *)
  reg double_step = 1'h0;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:22" *)
  output [2:0] en;
  reg [2:0] en;
  (* enum_base_type = "fsmState" *)
  (* enum_value_0000 = "Initial/0" *)
  (* enum_value_0001 = "Get command/1" *)
  (* enum_value_0010 = "Load start/2" *)
  (* enum_value_0011 = "Load ring/3" *)
  (* enum_value_0100 = "Inc Rotor 0/4" *)
  (* enum_value_0101 = "Inc Rotor 1/5" *)
  (* enum_value_0110 = "Delay 2/6" *)
  (* enum_value_0111 = "Delay/7" *)
  (* enum_value_1000 = "Check Rotor 1 Turnover/8" *)
  (* enum_value_1001 = "Inc Rotor 2/9" *)
  (* enum_value_1010 = "Delay 3/10" *)
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:60" *)
  reg [3:0] fsm_state = 4'h0;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:34" *)
  output [2:0] inc;
  reg [2:0] inc = 3'h0;
  (* init = 3'h0 *)
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:34" *)
  wire [2:0] \inc$1 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:18" *)
  input [2:0] is_at_turnover;
  wire [2:0] is_at_turnover;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:24" *)
  output load_ring;
  reg load_ring;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:23" *)
  output load_start;
  reg load_start;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:21" *)
  output ready;
  reg ready;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input rst;
  wire rst;
  assign \$1  = ! (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) fsm_state;
  assign \$2  = fsm_state == (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) 1'h1;
  assign \$3  = fsm_state == (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) 2'h2;
  assign \$4  = fsm_state == (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) 2'h3;
  assign \$5  = fsm_state == (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) 3'h4;
  assign \$6  = fsm_state == (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) 3'h5;
  assign \$7  = fsm_state == (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) 3'h6;
  assign \$8  = fsm_state == (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) 3'h7;
  assign \$9  = fsm_state == (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) 4'h8;
  assign \$10  = fsm_state == (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) 4'h9;
  assign \$11  = fsm_state == (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:486" *) 4'ha;
  assign \$12  = active == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:91" *) 2'h3;
  assign \$13  = active + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:95" *) 1'h1;
  assign \$14  = active == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:100" *) 2'h3;
  assign \$15  = active + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:104" *) 1'h1;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:33" *)
  always @(posedge clk)
    active <= \$16 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:60" *)
  always @(posedge clk)
    fsm_state <= \$17 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:34" *)
  always @(posedge clk)
    inc <= \$18 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/fsm.py:35" *)
  always @(posedge clk)
    double_step <= \$19 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    (* full_case = 32'd1 *)
    casez (active)
      2'h1:
          en = 3'h1;
      2'h2:
          en = 3'h2;
      2'h3:
          en = 3'h4;
      default:
          en = 3'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    ready = 1'h0;
    casez (fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          ready = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    load_start = 1'h0;
    casez (fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          load_start = 1'h0;
      4'h2:
          load_start = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    load_ring = 1'h0;
    casez (fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          load_ring = 1'h0;
      4'h2:
          /* empty */;
      4'h3:
          load_ring = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$16  = active;
    casez (fsm_state)
      4'h0:
          \$16  = 2'h0;
      4'h1:
          \$16  = 2'h0;
      4'h2:
          (* full_case = 32'd1 *)
          if (\$12 ) begin
            \$16  = 2'h0;
          end else begin
            \$16  = \$13 [1:0];
          end
      4'h3:
          (* full_case = 32'd1 *)
          if (\$14 ) begin
            \$16  = 2'h0;
          end else begin
            \$16  = \$15 [1:0];
          end
      4'h4:
          \$16  = 2'h1;
      4'h5:
          \$16  = 2'h2;
      4'h7:
          /* empty */;
      4'h8:
          /* empty */;
      4'h9:
          \$16  = 2'h3;
      4'h6:
          \$16  = 2'h0;
    endcase
    if (rst) begin
      \$16  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$17  = fsm_state;
    casez (fsm_state)
      4'h0:
          \$17  = 4'h1;
      4'h1:
          (* full_case = 32'd1 *)
          casez (cmd)
            3'h3:
                \$17  = 4'h0;
            3'h1:
                \$17  = 4'h2;
            3'h2:
                \$17  = 4'h3;
            3'h4:
                \$17  = 4'h4;
            default:
                \$17  = 4'h1;
          endcase
      4'h2:
          (* full_case = 32'd1 *)
          if (\$12 ) begin
            \$17  = 4'h1;
          end else begin
            \$17  = 4'h2;
          end
      4'h3:
          (* full_case = 32'd1 *)
          if (\$14 ) begin
            \$17  = 4'h1;
          end else begin
            \$17  = 4'h3;
          end
      4'h4:
          (* full_case = 32'd1 *)
          if (is_at_turnover[0]) begin
            \$17  = 4'h5;
          end else if (double_step) begin
            \$17  = 4'h5;
          end else begin
            \$17  = 4'h6;
          end
      4'h5:
          \$17  = 4'h7;
      4'h7:
          \$17  = 4'h8;
      4'h8:
          (* full_case = 32'd1 *)
          if (is_at_turnover[1]) begin
            \$17  = 4'h6;
          end else if (double_step) begin
            \$17  = 4'h9;
          end else begin
            \$17  = 4'h6;
          end
      4'h9:
          \$17  = 4'h6;
      4'h6:
          \$17  = 4'ha;
      4'ha:
          \$17  = 4'h1;
    endcase
    if (rst) begin
      \$17  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$18  = inc;
    casez (fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          \$18  = 3'h0;
      4'h2:
          /* empty */;
      4'h3:
          /* empty */;
      4'h4:
          \$18 [0] = 1'h1;
      4'h5:
        begin
          \$18 [0] = 1'h0;
          \$18 [1] = 1'h1;
        end
      4'h7:
          \$18  = 3'h0;
      4'h8:
          \$18  = 3'h0;
      4'h9:
        begin
          \$18 [0] = 1'h0;
          \$18 [1] = 1'h0;
          \$18 [2] = 1'h1;
        end
      4'h6:
          \$18  = 3'h0;
    endcase
    if (rst) begin
      \$18  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$19  = double_step;
    casez (fsm_state)
      4'h0:
          /* empty */;
      4'h1:
          /* empty */;
      4'h2:
          /* empty */;
      4'h3:
          /* empty */;
      4'h4:
          /* empty */;
      4'h5:
          /* empty */;
      4'h7:
          /* empty */;
      4'h8:
          if (is_at_turnover[1]) begin
            \$19  = 1'h1;
          end
      4'h9:
          \$19  = 1'h0;
    endcase
    if (rst) begin
      \$19  = 1'h0;
    end
  end
  assign \inc$1  = inc;
endmodule

(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:31" *)
(* generator = "Amaranth" *)
module \top.r0 (clk, rst, is_at_turnover, left_out, right_out, left_in, en, load_start, load_ring, inc, right_in);
  reg \$auto$verilog_backend.cc:2352:dump_module$3  = 0;
  wire [5:0] \$1 ;
  wire [5:0] \$10 ;
  wire [6:0] \$11 ;
  wire [6:0] \$12 ;
  reg [4:0] \$13 ;
  wire [5:0] \$14 ;
  wire [6:0] \$15 ;
  wire [6:0] \$16 ;
  reg [4:0] \$17 ;
  reg [4:0] \$18 ;
  wire [5:0] \$2 ;
  wire [5:0] \$20 ;
  wire \$22 ;
  wire [6:0] \$28 ;
  wire [5:0] \$3 ;
  wire \$30 ;
  wire [6:0] \$37 ;
  wire \$39 ;
  wire [6:0] \$4 ;
  wire [6:0] \$45 ;
  wire \$47 ;
  wire [6:0] \$5 ;
  wire [6:0] \$53 ;
  wire \$55 ;
  wire \$6 ;
  wire [5:0] \$7 ;
  wire [6:0] \$8 ;
  wire [6:0] \$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  reg [4:0] cnt = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  input en;
  wire en;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  input inc;
  wire inc;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  output is_at_turnover;
  wire is_at_turnover;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  input [4:0] left_in;
  wire [4:0] left_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  output [4:0] left_out;
  wire [4:0] left_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:27" *)
  wire [4:0] left_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  input load_ring;
  wire load_ring;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  input load_start;
  wire load_start;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  input [4:0] right_in;
  wire [4:0] right_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  output [4:0] right_out;
  wire [4:0] right_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:22" *)
  wire [4:0] right_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  reg [4:0] ring_setting = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input rst;
  wire rst;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:23" *)
  reg [4:0] rtol_swizzle;
  assign \$1  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 1'h1;
  assign \$20  = \$1  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 5'h1a;
  assign is_at_turnover = cnt == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:51" *) 5'h10;
  assign \$3  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) right_in;
  assign \$4  = \$3  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) ring_setting;
  wire [6:0] _0_ = $signed(\$4 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) $signed(6'h1a);
  assign \$28  = (\$4 [6] == 1'h0) || _0_ == 0 ? $signed(_0_) : $signed(6'h1a) + $signed(_0_);
  assign \$6  = load_start | (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:65" *) load_ring;
  assign \$7  = rtol_swizzle - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) cnt;
  assign \$8  = $signed(\$7 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _1_ = $signed(\$8 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed(6'h1a);
  assign \$37  = (\$8 [6] == 1'h0) || _1_ == 0 ? $signed(_1_) : $signed(6'h1a) + $signed(_1_);
  assign left_out = \$6  ? (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:65" *) right_in : \$9 [4:0];
  assign \$10  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) left_in;
  assign \$11  = \$10  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) ring_setting;
  wire [6:0] _2_ = $signed(\$11 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) $signed(6'h1a);
  assign \$45  = (\$11 [6] == 1'h0) || _2_ == 0 ? $signed(_2_) : $signed(6'h1a) + $signed(_2_);
  assign \$14  = \$13  - (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ast.py:2368" *) cnt;
  assign \$15  = $signed(\$14 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _3_ = $signed(\$15 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed(6'h1a);
  assign \$53  = (\$15 [6] == 1'h0) || _3_ == 0 ? $signed(_3_) : $signed(6'h1a) + $signed(_3_);
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  always @(posedge clk)
    cnt <= \$17 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  always @(posedge clk)
    ring_setting <= \$18 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    rtol_swizzle = 5'h00;
    casez (\$5 [4:0])
      5'h00:
          rtol_swizzle = 5'h04;
      5'h01:
          rtol_swizzle = 5'h0a;
      5'h02:
          rtol_swizzle = 5'h0c;
      5'h03:
          rtol_swizzle = 5'h05;
      5'h04:
          rtol_swizzle = 5'h0b;
      5'h05:
          rtol_swizzle = 5'h06;
      5'h06:
          rtol_swizzle = 5'h03;
      5'h07:
          rtol_swizzle = 5'h10;
      5'h08:
          rtol_swizzle = 5'h15;
      5'h09:
          rtol_swizzle = 5'h19;
      5'h0a:
          rtol_swizzle = 5'h0d;
      5'h0b:
          rtol_swizzle = 5'h13;
      5'h0c:
          rtol_swizzle = 5'h0e;
      5'h0d:
          rtol_swizzle = 5'h16;
      5'h0e:
          rtol_swizzle = 5'h18;
      5'h0f:
          rtol_swizzle = 5'h07;
      5'h10:
          rtol_swizzle = 5'h17;
      5'h11:
          rtol_swizzle = 5'h14;
      5'h12:
          rtol_swizzle = 5'h12;
      5'h13:
          rtol_swizzle = 5'h0f;
      5'h14:
          rtol_swizzle = 5'h00;
      5'h15:
          rtol_swizzle = 5'h08;
      5'h16:
          rtol_swizzle = 5'h01;
      5'h17:
          rtol_swizzle = 5'h11;
      5'h18:
          rtol_swizzle = 5'h02;
      5'h19:
          rtol_swizzle = 5'h09;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$13  = 5'h00;
    casez (\$12 [4:0])
      5'h00:
          \$13  = 5'h14;
      5'h01:
          \$13  = 5'h16;
      5'h02:
          \$13  = 5'h18;
      5'h03:
          \$13  = 5'h06;
      5'h04:
          \$13  = 5'h00;
      5'h05:
          \$13  = 5'h03;
      5'h06:
          \$13  = 5'h05;
      5'h07:
          \$13  = 5'h0f;
      5'h08:
          \$13  = 5'h15;
      5'h09:
          \$13  = 5'h19;
      5'h0a:
          \$13  = 5'h01;
      5'h0b:
          \$13  = 5'h04;
      5'h0c:
          \$13  = 5'h02;
      5'h0d:
          \$13  = 5'h0a;
      5'h0e:
          \$13  = 5'h0c;
      5'h0f:
          \$13  = 5'h13;
      5'h10:
          \$13  = 5'h07;
      5'h11:
          \$13  = 5'h17;
      5'h12:
          \$13  = 5'h12;
      5'h13:
          \$13  = 5'h0b;
      5'h14:
          \$13  = 5'h11;
      5'h15:
          \$13  = 5'h08;
      5'h16:
          \$13  = 5'h0d;
      5'h17:
          \$13  = 5'h10;
      5'h18:
          \$13  = 5'h0e;
      5'h19:
          \$13  = 5'h09;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$17  = cnt;
    if (en) begin
      if (load_start) begin
        \$17  = right_in;
      end else if (load_ring) begin
      end else if (inc) begin
        \$17  = \$2 [4:0];
      end
    end
    if (rst) begin
      \$17  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$18  = ring_setting;
    if (en) begin
      if (load_start) begin
      end else if (load_ring) begin
        \$18  = right_in;
      end
    end
    if (rst) begin
      \$18  = 5'h00;
    end
  end
  assign right_ptr = \$5 [4:0];
  assign left_ptr = \$12 [4:0];
  assign right_out = \$16 [4:0];
  assign \$22  = 1'h1;
  assign \$2  = \$20 ;
  assign \$30  = 1'h1;
  assign \$5  = \$28 ;
  assign \$39  = 1'h1;
  assign \$9  = \$37 ;
  assign \$47  = 1'h1;
  assign \$12  = \$45 ;
  assign \$55  = 1'h1;
  assign \$16  = \$53 ;
endmodule

(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:31" *)
(* generator = "Amaranth" *)
module \top.r1 (rst, right_in, is_at_turnover, left_out, right_out, left_in, en, load_start, load_ring, inc, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$4  = 0;
  wire [5:0] \$1 ;
  wire [5:0] \$10 ;
  wire [6:0] \$11 ;
  wire [6:0] \$12 ;
  reg [4:0] \$13 ;
  wire [5:0] \$14 ;
  wire [6:0] \$15 ;
  wire [6:0] \$16 ;
  reg [4:0] \$17 ;
  reg [4:0] \$18 ;
  wire [5:0] \$2 ;
  wire [5:0] \$20 ;
  wire \$22 ;
  wire [6:0] \$28 ;
  wire [5:0] \$3 ;
  wire \$30 ;
  wire [6:0] \$37 ;
  wire \$39 ;
  wire [6:0] \$4 ;
  wire [6:0] \$45 ;
  wire \$47 ;
  wire [6:0] \$5 ;
  wire [6:0] \$53 ;
  wire \$55 ;
  wire \$6 ;
  wire [5:0] \$7 ;
  wire [6:0] \$8 ;
  wire [6:0] \$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  reg [4:0] cnt = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  input en;
  wire en;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  input inc;
  wire inc;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  output is_at_turnover;
  wire is_at_turnover;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  input [4:0] left_in;
  wire [4:0] left_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  output [4:0] left_out;
  wire [4:0] left_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:27" *)
  wire [4:0] left_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  input load_ring;
  wire load_ring;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  input load_start;
  wire load_start;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  input [4:0] right_in;
  wire [4:0] right_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  output [4:0] right_out;
  wire [4:0] right_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:22" *)
  wire [4:0] right_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  reg [4:0] ring_setting = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input rst;
  wire rst;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:23" *)
  reg [4:0] rtol_swizzle;
  assign \$1  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 1'h1;
  assign \$20  = \$1  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 5'h1a;
  assign is_at_turnover = cnt == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:51" *) 3'h4;
  assign \$3  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) right_in;
  assign \$4  = \$3  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) ring_setting;
  wire [6:0] _0_ = $signed(\$4 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) $signed(6'h1a);
  assign \$28  = (\$4 [6] == 1'h0) || _0_ == 0 ? $signed(_0_) : $signed(6'h1a) + $signed(_0_);
  assign \$6  = load_start | (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:65" *) load_ring;
  assign \$7  = rtol_swizzle - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) cnt;
  assign \$8  = $signed(\$7 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _1_ = $signed(\$8 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed(6'h1a);
  assign \$37  = (\$8 [6] == 1'h0) || _1_ == 0 ? $signed(_1_) : $signed(6'h1a) + $signed(_1_);
  assign left_out = \$6  ? (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:65" *) right_in : \$9 [4:0];
  assign \$10  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) left_in;
  assign \$11  = \$10  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) ring_setting;
  wire [6:0] _2_ = $signed(\$11 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) $signed(6'h1a);
  assign \$45  = (\$11 [6] == 1'h0) || _2_ == 0 ? $signed(_2_) : $signed(6'h1a) + $signed(_2_);
  assign \$14  = \$13  - (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ast.py:2368" *) cnt;
  assign \$15  = $signed(\$14 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _3_ = $signed(\$15 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed(6'h1a);
  assign \$53  = (\$15 [6] == 1'h0) || _3_ == 0 ? $signed(_3_) : $signed(6'h1a) + $signed(_3_);
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  always @(posedge clk)
    cnt <= \$17 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  always @(posedge clk)
    ring_setting <= \$18 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    rtol_swizzle = 5'h00;
    casez (\$5 [4:0])
      5'h00:
          rtol_swizzle = 5'h00;
      5'h01:
          rtol_swizzle = 5'h09;
      5'h02:
          rtol_swizzle = 5'h03;
      5'h03:
          rtol_swizzle = 5'h0a;
      5'h04:
          rtol_swizzle = 5'h12;
      5'h05:
          rtol_swizzle = 5'h08;
      5'h06:
          rtol_swizzle = 5'h11;
      5'h07:
          rtol_swizzle = 5'h14;
      5'h08:
          rtol_swizzle = 5'h17;
      5'h09:
          rtol_swizzle = 5'h01;
      5'h0a:
          rtol_swizzle = 5'h0b;
      5'h0b:
          rtol_swizzle = 5'h07;
      5'h0c:
          rtol_swizzle = 5'h16;
      5'h0d:
          rtol_swizzle = 5'h13;
      5'h0e:
          rtol_swizzle = 5'h0c;
      5'h0f:
          rtol_swizzle = 5'h02;
      5'h10:
          rtol_swizzle = 5'h10;
      5'h11:
          rtol_swizzle = 5'h06;
      5'h12:
          rtol_swizzle = 5'h19;
      5'h13:
          rtol_swizzle = 5'h0d;
      5'h14:
          rtol_swizzle = 5'h0f;
      5'h15:
          rtol_swizzle = 5'h18;
      5'h16:
          rtol_swizzle = 5'h05;
      5'h17:
          rtol_swizzle = 5'h15;
      5'h18:
          rtol_swizzle = 5'h0e;
      5'h19:
          rtol_swizzle = 5'h04;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$13  = 5'h00;
    casez (\$12 [4:0])
      5'h00:
          \$13  = 5'h00;
      5'h01:
          \$13  = 5'h09;
      5'h02:
          \$13  = 5'h0f;
      5'h03:
          \$13  = 5'h02;
      5'h04:
          \$13  = 5'h19;
      5'h05:
          \$13  = 5'h16;
      5'h06:
          \$13  = 5'h11;
      5'h07:
          \$13  = 5'h0b;
      5'h08:
          \$13  = 5'h05;
      5'h09:
          \$13  = 5'h01;
      5'h0a:
          \$13  = 5'h03;
      5'h0b:
          \$13  = 5'h0a;
      5'h0c:
          \$13  = 5'h0e;
      5'h0d:
          \$13  = 5'h13;
      5'h0e:
          \$13  = 5'h18;
      5'h0f:
          \$13  = 5'h14;
      5'h10:
          \$13  = 5'h10;
      5'h11:
          \$13  = 5'h06;
      5'h12:
          \$13  = 5'h04;
      5'h13:
          \$13  = 5'h0d;
      5'h14:
          \$13  = 5'h07;
      5'h15:
          \$13  = 5'h17;
      5'h16:
          \$13  = 5'h0c;
      5'h17:
          \$13  = 5'h08;
      5'h18:
          \$13  = 5'h15;
      5'h19:
          \$13  = 5'h12;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$17  = cnt;
    if (en) begin
      if (load_start) begin
        \$17  = right_in;
      end else if (load_ring) begin
      end else if (inc) begin
        \$17  = \$2 [4:0];
      end
    end
    if (rst) begin
      \$17  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$18  = ring_setting;
    if (en) begin
      if (load_start) begin
      end else if (load_ring) begin
        \$18  = right_in;
      end
    end
    if (rst) begin
      \$18  = 5'h00;
    end
  end
  assign right_ptr = \$5 [4:0];
  assign left_ptr = \$12 [4:0];
  assign right_out = \$16 [4:0];
  assign \$22  = 1'h1;
  assign \$2  = \$20 ;
  assign \$30  = 1'h1;
  assign \$5  = \$28 ;
  assign \$39  = 1'h1;
  assign \$9  = \$37 ;
  assign \$47  = 1'h1;
  assign \$12  = \$45 ;
  assign \$55  = 1'h1;
  assign \$16  = \$53 ;
endmodule

(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:31" *)
(* generator = "Amaranth" *)
module \top.r2 (rst, right_in, is_at_turnover, left_out, right_out, left_in, en, load_start, load_ring, inc, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$5  = 0;
  wire [5:0] \$1 ;
  wire [5:0] \$10 ;
  wire [6:0] \$11 ;
  wire [6:0] \$12 ;
  reg [4:0] \$13 ;
  wire [5:0] \$14 ;
  wire [6:0] \$15 ;
  wire [6:0] \$16 ;
  reg [4:0] \$17 ;
  reg [4:0] \$18 ;
  wire [5:0] \$2 ;
  wire [5:0] \$20 ;
  wire \$22 ;
  wire [6:0] \$28 ;
  wire [5:0] \$3 ;
  wire \$30 ;
  wire [6:0] \$37 ;
  wire \$39 ;
  wire [6:0] \$4 ;
  wire [6:0] \$45 ;
  wire \$47 ;
  wire [6:0] \$5 ;
  wire [6:0] \$53 ;
  wire \$55 ;
  wire \$6 ;
  wire [5:0] \$7 ;
  wire [6:0] \$8 ;
  wire [6:0] \$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  reg [4:0] cnt = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  input en;
  wire en;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  input inc;
  wire inc;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  output is_at_turnover;
  wire is_at_turnover;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  input [4:0] left_in;
  wire [4:0] left_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  output [4:0] left_out;
  wire [4:0] left_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:27" *)
  wire [4:0] left_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  input load_ring;
  wire load_ring;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  input load_start;
  wire load_start;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  input [4:0] right_in;
  wire [4:0] right_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  output [4:0] right_out;
  wire [4:0] right_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:22" *)
  wire [4:0] right_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  reg [4:0] ring_setting = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input rst;
  wire rst;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:23" *)
  reg [4:0] rtol_swizzle;
  assign \$1  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 1'h1;
  assign \$20  = \$1  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 5'h1a;
  assign is_at_turnover = cnt == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:51" *) 5'h15;
  assign \$3  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) right_in;
  assign \$4  = \$3  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) ring_setting;
  wire [6:0] _0_ = $signed(\$4 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) $signed(6'h1a);
  assign \$28  = (\$4 [6] == 1'h0) || _0_ == 0 ? $signed(_0_) : $signed(6'h1a) + $signed(_0_);
  assign \$6  = load_start | (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:65" *) load_ring;
  assign \$7  = rtol_swizzle - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) cnt;
  assign \$8  = $signed(\$7 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _1_ = $signed(\$8 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed(6'h1a);
  assign \$37  = (\$8 [6] == 1'h0) || _1_ == 0 ? $signed(_1_) : $signed(6'h1a) + $signed(_1_);
  assign left_out = \$6  ? (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:65" *) right_in : \$9 [4:0];
  assign \$10  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) left_in;
  assign \$11  = \$10  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) ring_setting;
  wire [6:0] _2_ = $signed(\$11 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) $signed(6'h1a);
  assign \$45  = (\$11 [6] == 1'h0) || _2_ == 0 ? $signed(_2_) : $signed(6'h1a) + $signed(_2_);
  assign \$14  = \$13  - (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ast.py:2368" *) cnt;
  assign \$15  = $signed(\$14 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _3_ = $signed(\$15 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed(6'h1a);
  assign \$53  = (\$15 [6] == 1'h0) || _3_ == 0 ? $signed(_3_) : $signed(6'h1a) + $signed(_3_);
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  always @(posedge clk)
    cnt <= \$17 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  always @(posedge clk)
    ring_setting <= \$18 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    rtol_swizzle = 5'h00;
    casez (\$5 [4:0])
      5'h00:
          rtol_swizzle = 5'h01;
      5'h01:
          rtol_swizzle = 5'h03;
      5'h02:
          rtol_swizzle = 5'h05;
      5'h03:
          rtol_swizzle = 5'h07;
      5'h04:
          rtol_swizzle = 5'h09;
      5'h05:
          rtol_swizzle = 5'h0b;
      5'h06:
          rtol_swizzle = 5'h02;
      5'h07:
          rtol_swizzle = 5'h0f;
      5'h08:
          rtol_swizzle = 5'h11;
      5'h09:
          rtol_swizzle = 5'h13;
      5'h0a:
          rtol_swizzle = 5'h17;
      5'h0b:
          rtol_swizzle = 5'h15;
      5'h0c:
          rtol_swizzle = 5'h19;
      5'h0d:
          rtol_swizzle = 5'h0d;
      5'h0e:
          rtol_swizzle = 5'h18;
      5'h0f:
          rtol_swizzle = 5'h04;
      5'h10:
          rtol_swizzle = 5'h08;
      5'h11:
          rtol_swizzle = 5'h16;
      5'h12:
          rtol_swizzle = 5'h06;
      5'h13:
          rtol_swizzle = 5'h00;
      5'h14:
          rtol_swizzle = 5'h0a;
      5'h15:
          rtol_swizzle = 5'h0c;
      5'h16:
          rtol_swizzle = 5'h14;
      5'h17:
          rtol_swizzle = 5'h12;
      5'h18:
          rtol_swizzle = 5'h10;
      5'h19:
          rtol_swizzle = 5'h0e;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$13  = 5'h00;
    casez (\$12 [4:0])
      5'h00:
          \$13  = 5'h13;
      5'h01:
          \$13  = 5'h00;
      5'h02:
          \$13  = 5'h06;
      5'h03:
          \$13  = 5'h01;
      5'h04:
          \$13  = 5'h0f;
      5'h05:
          \$13  = 5'h02;
      5'h06:
          \$13  = 5'h12;
      5'h07:
          \$13  = 5'h03;
      5'h08:
          \$13  = 5'h10;
      5'h09:
          \$13  = 5'h04;
      5'h0a:
          \$13  = 5'h14;
      5'h0b:
          \$13  = 5'h05;
      5'h0c:
          \$13  = 5'h15;
      5'h0d:
          \$13  = 5'h0d;
      5'h0e:
          \$13  = 5'h19;
      5'h0f:
          \$13  = 5'h07;
      5'h10:
          \$13  = 5'h18;
      5'h11:
          \$13  = 5'h08;
      5'h12:
          \$13  = 5'h17;
      5'h13:
          \$13  = 5'h09;
      5'h14:
          \$13  = 5'h16;
      5'h15:
          \$13  = 5'h0b;
      5'h16:
          \$13  = 5'h11;
      5'h17:
          \$13  = 5'h0a;
      5'h18:
          \$13  = 5'h0e;
      5'h19:
          \$13  = 5'h0c;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$17  = cnt;
    if (en) begin
      if (load_start) begin
        \$17  = right_in;
      end else if (load_ring) begin
      end else if (inc) begin
        \$17  = \$2 [4:0];
      end
    end
    if (rst) begin
      \$17  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$18  = ring_setting;
    if (en) begin
      if (load_start) begin
      end else if (load_ring) begin
        \$18  = right_in;
      end
    end
    if (rst) begin
      \$18  = 5'h00;
    end
  end
  assign right_ptr = \$5 [4:0];
  assign left_ptr = \$12 [4:0];
  assign right_out = \$16 [4:0];
  assign \$22  = 1'h1;
  assign \$2  = \$20 ;
  assign \$30  = 1'h1;
  assign \$5  = \$28 ;
  assign \$39  = 1'h1;
  assign \$9  = \$37 ;
  assign \$47  = 1'h1;
  assign \$12  = \$45 ;
  assign \$55  = 1'h1;
  assign \$16  = \$53 ;
endmodule

(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:31" *)
(* generator = "Amaranth" *)
module \top.ref (rst, right_in, left_out, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$6  = 0;
  wire [5:0] \$1 ;
  wire [5:0] \$10 ;
  wire [6:0] \$11 ;
  wire [6:0] \$12 ;
  reg [4:0] \$13 ;
  wire [5:0] \$14 ;
  wire [6:0] \$15 ;
  wire [6:0] \$16 ;
  reg [4:0] \$17 ;
  reg [4:0] \$18 ;
  wire [5:0] \$2 ;
  wire [5:0] \$20 ;
  wire \$22 ;
  wire [6:0] \$28 ;
  wire [5:0] \$3 ;
  wire \$30 ;
  wire [6:0] \$37 ;
  wire \$39 ;
  wire [6:0] \$4 ;
  wire [6:0] \$45 ;
  wire \$47 ;
  wire [6:0] \$5 ;
  wire [6:0] \$53 ;
  wire \$55 ;
  wire \$6 ;
  wire [5:0] \$7 ;
  wire [6:0] \$8 ;
  wire [6:0] \$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  reg [4:0] cnt = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  wire en;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  wire inc;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  wire is_at_turnover;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  wire [4:0] left_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  output [4:0] left_out;
  wire [4:0] left_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:27" *)
  wire [4:0] left_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  wire load_ring;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  wire load_start;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  input [4:0] right_in;
  wire [4:0] right_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  wire [4:0] right_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:22" *)
  wire [4:0] right_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  reg [4:0] ring_setting = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:215" *)
  input rst;
  wire rst;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:23" *)
  reg [4:0] rtol_swizzle;
  assign \$1  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 1'h1;
  assign \$20  = \$1  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 5'h1a;
  assign is_at_turnover = cnt == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:51" *) 5'h19;
  assign \$3  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) right_in;
  assign \$4  = \$3  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) ring_setting;
  wire [6:0] _0_ = $signed(\$4 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) $signed(6'h1a);
  assign \$28  = (\$4 [6] == 1'h0) || _0_ == 0 ? $signed(_0_) : $signed(6'h1a) + $signed(_0_);
  assign \$7  = rtol_swizzle - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) cnt;
  assign \$8  = $signed(\$7 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _1_ = $signed(\$8 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed(6'h1a);
  assign \$37  = (\$8 [6] == 1'h0) || _1_ == 0 ? $signed(_1_) : $signed(6'h1a) + $signed(_1_);
  assign \$10  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) 1'h0;
  assign \$11  = \$10  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) ring_setting;
  wire [6:0] _2_ = $signed(\$11 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) $signed(6'h1a);
  assign \$45  = (\$11 [6] == 1'h0) || _2_ == 0 ? $signed(_2_) : $signed(6'h1a) + $signed(_2_);
  assign \$14  = \$13  - (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ast.py:2368" *) cnt;
  assign \$15  = $signed(\$14 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _3_ = $signed(\$15 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed(6'h1a);
  assign \$53  = (\$15 [6] == 1'h0) || _3_ == 0 ? $signed(_3_) : $signed(6'h1a) + $signed(_3_);
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  always @(posedge clk)
    cnt <= \$17 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  always @(posedge clk)
    ring_setting <= \$18 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    rtol_swizzle = 5'h00;
    casez (\$5 [4:0])
      5'h00:
          rtol_swizzle = 5'h18;
      5'h01:
          rtol_swizzle = 5'h11;
      5'h02:
          rtol_swizzle = 5'h14;
      5'h03:
          rtol_swizzle = 5'h07;
      5'h04:
          rtol_swizzle = 5'h10;
      5'h05:
          rtol_swizzle = 5'h12;
      5'h06:
          rtol_swizzle = 5'h0b;
      5'h07:
          rtol_swizzle = 5'h03;
      5'h08:
          rtol_swizzle = 5'h0f;
      5'h09:
          rtol_swizzle = 5'h17;
      5'h0a:
          rtol_swizzle = 5'h0d;
      5'h0b:
          rtol_swizzle = 5'h06;
      5'h0c:
          rtol_swizzle = 5'h0e;
      5'h0d:
          rtol_swizzle = 5'h0a;
      5'h0e:
          rtol_swizzle = 5'h0c;
      5'h0f:
          rtol_swizzle = 5'h08;
      5'h10:
          rtol_swizzle = 5'h04;
      5'h11:
          rtol_swizzle = 5'h01;
      5'h12:
          rtol_swizzle = 5'h05;
      5'h13:
          rtol_swizzle = 5'h19;
      5'h14:
          rtol_swizzle = 5'h02;
      5'h15:
          rtol_swizzle = 5'h16;
      5'h16:
          rtol_swizzle = 5'h15;
      5'h17:
          rtol_swizzle = 5'h09;
      5'h18:
          rtol_swizzle = 5'h00;
      5'h19:
          rtol_swizzle = 5'h13;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$13  = 5'h00;
    casez (\$12 [4:0])
      5'h00:
          \$13  = 5'h18;
      5'h01:
          \$13  = 5'h11;
      5'h02:
          \$13  = 5'h14;
      5'h03:
          \$13  = 5'h07;
      5'h04:
          \$13  = 5'h10;
      5'h05:
          \$13  = 5'h12;
      5'h06:
          \$13  = 5'h0b;
      5'h07:
          \$13  = 5'h03;
      5'h08:
          \$13  = 5'h0f;
      5'h09:
          \$13  = 5'h17;
      5'h0a:
          \$13  = 5'h0d;
      5'h0b:
          \$13  = 5'h06;
      5'h0c:
          \$13  = 5'h0e;
      5'h0d:
          \$13  = 5'h0a;
      5'h0e:
          \$13  = 5'h0c;
      5'h0f:
          \$13  = 5'h08;
      5'h10:
          \$13  = 5'h04;
      5'h11:
          \$13  = 5'h01;
      5'h12:
          \$13  = 5'h05;
      5'h13:
          \$13  = 5'h19;
      5'h14:
          \$13  = 5'h02;
      5'h15:
          \$13  = 5'h16;
      5'h16:
          \$13  = 5'h15;
      5'h17:
          \$13  = 5'h09;
      5'h18:
          \$13  = 5'h00;
      5'h19:
          \$13  = 5'h13;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$17  = cnt;
    if (rst) begin
      \$17  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$18  = ring_setting;
    if (rst) begin
      \$18  = 5'h00;
    end
  end
  assign en = 1'h0;
  assign load_start = 1'h0;
  assign load_ring = 1'h0;
  assign inc = 1'h0;
  assign right_ptr = \$5 [4:0];
  assign left_ptr = \$12 [4:0];
  assign left_in = 5'h00;
  assign right_out = \$16 [4:0];
  assign \$22  = 1'h1;
  assign \$2  = \$20 ;
  assign \$30  = 1'h1;
  assign \$5  = \$28 ;
  assign \$6  = 1'h0;
  assign \$39  = 1'h1;
  assign \$9  = \$37 ;
  assign left_out = \$9 [4:0];
  assign \$47  = 1'h1;
  assign \$12  = \$45 ;
  assign \$55  = 1'h1;
  assign \$16  = \$53 ;
endmodule
