/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post100, git sha1 a1bb0255d) */

(* top =  1  *)
(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:31" *)
(* generator = "Amaranth" *)
module top(rst, clk, \rst$4 , uo_out, ui_in);
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  wire [4:0] left_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  wire [4:0] \left_in$14 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  wire [4:0] \left_in$16 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  wire [4:0] left_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  wire [4:0] \left_out$11 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  wire [4:0] \left_out$13 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  wire [4:0] \left_out$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  wire [4:0] right_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  wire [4:0] \right_in$10 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  wire [4:0] \right_in$6 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  wire [4:0] \right_in$8 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  wire [4:0] right_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  wire [4:0] \right_out$17 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  wire [4:0] \right_out$18 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:11" *)
  input rst;
  wire rst;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  wire \rst$19 ;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input \rst$4 ;
  wire \rst$4 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:8" *)
  input [7:0] ui_in;
  wire [7:0] ui_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  output [4:0] uo_out;
  wire [4:0] uo_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:32" *)
  \top.r0  r0 (
    .clk(clk),
    .left_in(\left_in$16 ),
    .left_out(\right_in$6 ),
    .right_in(ui_in[4:0]),
    .right_out(uo_out),
    .rst(\rst$4 )
  );
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:33" *)
  \top.r1  r1 (
    .clk(clk),
    .left_in(\left_in$14 ),
    .left_out(\right_in$8 ),
    .right_in(\right_in$6 ),
    .right_out(\left_in$16 ),
    .rst(\rst$4 )
  );
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:34" *)
  \top.r2  r2 (
    .clk(clk),
    .left_in(left_in),
    .left_out(\right_in$10 ),
    .right_in(\right_in$8 ),
    .right_out(\left_in$14 ),
    .rst(\rst$4 )
  );
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/top.py:35" *)
  \top.ref  \ref  (
    .clk(clk),
    .left_out(left_in),
    .right_in(\right_in$10 ),
    .rst(\rst$4 )
  );
  assign right_in = ui_in[4:0];
  assign left_out = \right_in$6 ;
  assign \left_out$9  = \right_in$8 ;
  assign \left_out$11  = \right_in$10 ;
  assign \left_out$13  = left_in;
  assign right_out = \left_in$14 ;
  assign \right_out$17  = \left_in$16 ;
  assign \right_out$18  = uo_out;
  assign \rst$19  = \rst$4 ;
endmodule

(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:31" *)
(* generator = "Amaranth" *)
module \top.r0 (clk, rst, left_out, right_out, left_in, right_in);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire [5:0] \$1 ;
  wire [6:0] \$10 ;
  wire [6:0] \$11 ;
  reg [4:0] \$12 ;
  wire [5:0] \$13 ;
  wire [5:0] \$14 ;
  reg [4:0] \$15 ;
  reg [4:0] \$16 ;
  wire [5:0] \$18 ;
  wire [5:0] \$2 ;
  wire \$20 ;
  wire [5:0] \$25 ;
  wire \$27 ;
  wire [5:0] \$3 ;
  wire [6:0] \$34 ;
  wire \$36 ;
  wire [5:0] \$4 ;
  wire [6:0] \$42 ;
  wire \$44 ;
  wire [5:0] \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire [5:0] \$6 ;
  wire [6:0] \$7 ;
  wire [6:0] \$8 ;
  wire [5:0] \$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  reg [4:0] cnt = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  wire en;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  wire inc;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  wire is_at_turnover;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  input [4:0] left_in;
  wire [4:0] left_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  output [4:0] left_out;
  wire [4:0] left_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:27" *)
  wire [4:0] left_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  wire load_ring;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  wire load_start;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  input [4:0] right_in;
  wire [4:0] right_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  output [4:0] right_out;
  wire [4:0] right_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:22" *)
  wire [4:0] right_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  reg [4:0] ring_setting = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:23" *)
  reg [4:0] rtol_swizzle;
  assign \$1  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 1'h1;
  assign \$18  = \$1  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 5'h1a;
  assign is_at_turnover = cnt == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:51" *) 5'h10;
  assign \$3  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) right_in;
  assign \$25  = \$3  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) 5'h1a;
  assign \$6  = rtol_swizzle - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) cnt;
  assign \$7  = $signed(\$6 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _0_ = $signed(\$7 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed(6'h1a);
  assign \$34  = (\$7 [6] == 1'h0) || _0_ == 0 ? $signed(_0_) : $signed(6'h1a) + $signed(_0_);
  assign \$9  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) left_in;
  assign \$10  = \$9  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) ring_setting;
  wire [6:0] _1_ = $signed(\$10 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) $signed(6'h1a);
  assign \$42  = (\$10 [6] == 1'h0) || _1_ == 0 ? $signed(_1_) : $signed(6'h1a) + $signed(_1_);
  assign \$13  = \$12  - (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ast.py:2423" *) cnt;
  wire [5:0] _2_ = $signed(\$13 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed(6'h1a);
  assign \$49  = (\$13 [5] == 1'h0) || _2_ == 0 ? $signed(_2_) : $signed(6'h1a) + $signed(_2_);
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  always @(posedge clk)
    cnt <= \$15 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  always @(posedge clk)
    ring_setting <= \$16 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    rtol_swizzle = 5'h00;
    casez (\$4 [4:0])
      5'h00:
          rtol_swizzle = 5'h04;
      5'h01:
          rtol_swizzle = 5'h0a;
      5'h02:
          rtol_swizzle = 5'h0c;
      5'h03:
          rtol_swizzle = 5'h05;
      5'h04:
          rtol_swizzle = 5'h0b;
      5'h05:
          rtol_swizzle = 5'h06;
      5'h06:
          rtol_swizzle = 5'h03;
      5'h07:
          rtol_swizzle = 5'h10;
      5'h08:
          rtol_swizzle = 5'h15;
      5'h09:
          rtol_swizzle = 5'h19;
      5'h0a:
          rtol_swizzle = 5'h0d;
      5'h0b:
          rtol_swizzle = 5'h13;
      5'h0c:
          rtol_swizzle = 5'h0e;
      5'h0d:
          rtol_swizzle = 5'h16;
      5'h0e:
          rtol_swizzle = 5'h18;
      5'h0f:
          rtol_swizzle = 5'h07;
      5'h10:
          rtol_swizzle = 5'h17;
      5'h11:
          rtol_swizzle = 5'h14;
      5'h12:
          rtol_swizzle = 5'h12;
      5'h13:
          rtol_swizzle = 5'h0f;
      5'h14:
          rtol_swizzle = 5'h00;
      5'h15:
          rtol_swizzle = 5'h08;
      5'h16:
          rtol_swizzle = 5'h01;
      5'h17:
          rtol_swizzle = 5'h11;
      5'h18:
          rtol_swizzle = 5'h02;
      5'h19:
          rtol_swizzle = 5'h09;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$12  = 5'h00;
    casez (\$11 [4:0])
      5'h00:
          \$12  = 5'h14;
      5'h01:
          \$12  = 5'h16;
      5'h02:
          \$12  = 5'h18;
      5'h03:
          \$12  = 5'h06;
      5'h04:
          \$12  = 5'h00;
      5'h05:
          \$12  = 5'h03;
      5'h06:
          \$12  = 5'h05;
      5'h07:
          \$12  = 5'h0f;
      5'h08:
          \$12  = 5'h15;
      5'h09:
          \$12  = 5'h19;
      5'h0a:
          \$12  = 5'h01;
      5'h0b:
          \$12  = 5'h04;
      5'h0c:
          \$12  = 5'h02;
      5'h0d:
          \$12  = 5'h0a;
      5'h0e:
          \$12  = 5'h0c;
      5'h0f:
          \$12  = 5'h13;
      5'h10:
          \$12  = 5'h07;
      5'h11:
          \$12  = 5'h17;
      5'h12:
          \$12  = 5'h12;
      5'h13:
          \$12  = 5'h0b;
      5'h14:
          \$12  = 5'h11;
      5'h15:
          \$12  = 5'h08;
      5'h16:
          \$12  = 5'h0d;
      5'h17:
          \$12  = 5'h10;
      5'h18:
          \$12  = 5'h0e;
      5'h19:
          \$12  = 5'h09;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$15  = cnt;
    if (rst) begin
      \$15  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$16  = ring_setting;
    if (rst) begin
      \$16  = 5'h00;
    end
  end
  assign en = 1'h0;
  assign load_start = 1'h0;
  assign load_ring = 1'h0;
  assign inc = 1'h0;
  assign right_ptr = \$4 [4:0];
  assign left_ptr = \$11 [4:0];
  assign right_out = \$14 [4:0];
  assign \$20  = 1'h1;
  assign \$2  = \$18 ;
  assign \$27  = 1'h1;
  assign \$4  = \$25 ;
  assign \$5  = 1'h0;
  assign \$36  = 1'h1;
  assign \$8  = \$34 ;
  assign left_out = \$8 [4:0];
  assign \$44  = 1'h1;
  assign \$11  = \$42 ;
  assign \$51  = 1'h1;
  assign \$14  = \$49 ;
endmodule

(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:31" *)
(* generator = "Amaranth" *)
module \top.r1 (rst, right_in, left_out, right_out, left_in, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$2  = 0;
  wire [5:0] \$1 ;
  wire [6:0] \$10 ;
  wire [6:0] \$11 ;
  reg [4:0] \$12 ;
  wire [5:0] \$13 ;
  wire [5:0] \$14 ;
  reg [4:0] \$15 ;
  reg [4:0] \$16 ;
  wire [5:0] \$18 ;
  wire [5:0] \$2 ;
  wire \$20 ;
  wire [5:0] \$25 ;
  wire \$27 ;
  wire [5:0] \$3 ;
  wire [6:0] \$34 ;
  wire \$36 ;
  wire [5:0] \$4 ;
  wire [6:0] \$42 ;
  wire \$44 ;
  wire [5:0] \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire [5:0] \$6 ;
  wire [6:0] \$7 ;
  wire [6:0] \$8 ;
  wire [5:0] \$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  reg [4:0] cnt = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  wire en;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  wire inc;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  wire is_at_turnover;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  input [4:0] left_in;
  wire [4:0] left_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  output [4:0] left_out;
  wire [4:0] left_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:27" *)
  wire [4:0] left_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  wire load_ring;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  wire load_start;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  input [4:0] right_in;
  wire [4:0] right_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  output [4:0] right_out;
  wire [4:0] right_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:22" *)
  wire [4:0] right_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  reg [4:0] ring_setting = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:23" *)
  reg [4:0] rtol_swizzle;
  assign \$1  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 1'h1;
  assign \$18  = \$1  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 5'h1a;
  assign is_at_turnover = cnt == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:51" *) 3'h4;
  assign \$3  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) right_in;
  assign \$25  = \$3  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) 5'h1a;
  assign \$6  = rtol_swizzle - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) cnt;
  assign \$7  = $signed(\$6 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _0_ = $signed(\$7 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed(6'h1a);
  assign \$34  = (\$7 [6] == 1'h0) || _0_ == 0 ? $signed(_0_) : $signed(6'h1a) + $signed(_0_);
  assign \$9  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) left_in;
  assign \$10  = \$9  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) ring_setting;
  wire [6:0] _1_ = $signed(\$10 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) $signed(6'h1a);
  assign \$42  = (\$10 [6] == 1'h0) || _1_ == 0 ? $signed(_1_) : $signed(6'h1a) + $signed(_1_);
  assign \$13  = \$12  - (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ast.py:2423" *) cnt;
  wire [5:0] _2_ = $signed(\$13 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed(6'h1a);
  assign \$49  = (\$13 [5] == 1'h0) || _2_ == 0 ? $signed(_2_) : $signed(6'h1a) + $signed(_2_);
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  always @(posedge clk)
    cnt <= \$15 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  always @(posedge clk)
    ring_setting <= \$16 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    rtol_swizzle = 5'h00;
    casez (\$4 [4:0])
      5'h00:
          rtol_swizzle = 5'h00;
      5'h01:
          rtol_swizzle = 5'h09;
      5'h02:
          rtol_swizzle = 5'h03;
      5'h03:
          rtol_swizzle = 5'h0a;
      5'h04:
          rtol_swizzle = 5'h12;
      5'h05:
          rtol_swizzle = 5'h08;
      5'h06:
          rtol_swizzle = 5'h11;
      5'h07:
          rtol_swizzle = 5'h14;
      5'h08:
          rtol_swizzle = 5'h17;
      5'h09:
          rtol_swizzle = 5'h01;
      5'h0a:
          rtol_swizzle = 5'h0b;
      5'h0b:
          rtol_swizzle = 5'h07;
      5'h0c:
          rtol_swizzle = 5'h16;
      5'h0d:
          rtol_swizzle = 5'h13;
      5'h0e:
          rtol_swizzle = 5'h0c;
      5'h0f:
          rtol_swizzle = 5'h02;
      5'h10:
          rtol_swizzle = 5'h10;
      5'h11:
          rtol_swizzle = 5'h06;
      5'h12:
          rtol_swizzle = 5'h19;
      5'h13:
          rtol_swizzle = 5'h0d;
      5'h14:
          rtol_swizzle = 5'h0f;
      5'h15:
          rtol_swizzle = 5'h18;
      5'h16:
          rtol_swizzle = 5'h05;
      5'h17:
          rtol_swizzle = 5'h15;
      5'h18:
          rtol_swizzle = 5'h0e;
      5'h19:
          rtol_swizzle = 5'h04;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$12  = 5'h00;
    casez (\$11 [4:0])
      5'h00:
          \$12  = 5'h00;
      5'h01:
          \$12  = 5'h09;
      5'h02:
          \$12  = 5'h0f;
      5'h03:
          \$12  = 5'h02;
      5'h04:
          \$12  = 5'h19;
      5'h05:
          \$12  = 5'h16;
      5'h06:
          \$12  = 5'h11;
      5'h07:
          \$12  = 5'h0b;
      5'h08:
          \$12  = 5'h05;
      5'h09:
          \$12  = 5'h01;
      5'h0a:
          \$12  = 5'h03;
      5'h0b:
          \$12  = 5'h0a;
      5'h0c:
          \$12  = 5'h0e;
      5'h0d:
          \$12  = 5'h13;
      5'h0e:
          \$12  = 5'h18;
      5'h0f:
          \$12  = 5'h14;
      5'h10:
          \$12  = 5'h10;
      5'h11:
          \$12  = 5'h06;
      5'h12:
          \$12  = 5'h04;
      5'h13:
          \$12  = 5'h0d;
      5'h14:
          \$12  = 5'h07;
      5'h15:
          \$12  = 5'h17;
      5'h16:
          \$12  = 5'h0c;
      5'h17:
          \$12  = 5'h08;
      5'h18:
          \$12  = 5'h15;
      5'h19:
          \$12  = 5'h12;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$15  = cnt;
    if (rst) begin
      \$15  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$16  = ring_setting;
    if (rst) begin
      \$16  = 5'h00;
    end
  end
  assign en = 1'h0;
  assign load_start = 1'h0;
  assign load_ring = 1'h0;
  assign inc = 1'h0;
  assign right_ptr = \$4 [4:0];
  assign left_ptr = \$11 [4:0];
  assign right_out = \$14 [4:0];
  assign \$20  = 1'h1;
  assign \$2  = \$18 ;
  assign \$27  = 1'h1;
  assign \$4  = \$25 ;
  assign \$5  = 1'h0;
  assign \$36  = 1'h1;
  assign \$8  = \$34 ;
  assign left_out = \$8 [4:0];
  assign \$44  = 1'h1;
  assign \$11  = \$42 ;
  assign \$51  = 1'h1;
  assign \$14  = \$49 ;
endmodule

(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:31" *)
(* generator = "Amaranth" *)
module \top.r2 (rst, right_in, left_out, right_out, left_in, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$3  = 0;
  wire [5:0] \$1 ;
  wire [6:0] \$10 ;
  wire [6:0] \$11 ;
  reg [4:0] \$12 ;
  wire [5:0] \$13 ;
  wire [5:0] \$14 ;
  reg [4:0] \$15 ;
  reg [4:0] \$16 ;
  wire [5:0] \$18 ;
  wire [5:0] \$2 ;
  wire \$20 ;
  wire [5:0] \$25 ;
  wire \$27 ;
  wire [5:0] \$3 ;
  wire [6:0] \$34 ;
  wire \$36 ;
  wire [5:0] \$4 ;
  wire [6:0] \$42 ;
  wire \$44 ;
  wire [5:0] \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire [5:0] \$6 ;
  wire [6:0] \$7 ;
  wire [6:0] \$8 ;
  wire [5:0] \$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  reg [4:0] cnt = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  wire en;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  wire inc;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  wire is_at_turnover;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  input [4:0] left_in;
  wire [4:0] left_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  output [4:0] left_out;
  wire [4:0] left_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:27" *)
  wire [4:0] left_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  wire load_ring;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  wire load_start;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  input [4:0] right_in;
  wire [4:0] right_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  output [4:0] right_out;
  wire [4:0] right_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:22" *)
  wire [4:0] right_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  reg [4:0] ring_setting = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:23" *)
  reg [4:0] rtol_swizzle;
  assign \$1  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 1'h1;
  assign \$18  = \$1  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 5'h1a;
  assign is_at_turnover = cnt == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:51" *) 5'h15;
  assign \$3  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) right_in;
  assign \$25  = \$3  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) 5'h1a;
  assign \$6  = rtol_swizzle - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) cnt;
  assign \$7  = $signed(\$6 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _0_ = $signed(\$7 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed(6'h1a);
  assign \$34  = (\$7 [6] == 1'h0) || _0_ == 0 ? $signed(_0_) : $signed(6'h1a) + $signed(_0_);
  assign \$9  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) left_in;
  assign \$10  = \$9  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) ring_setting;
  wire [6:0] _1_ = $signed(\$10 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) $signed(6'h1a);
  assign \$42  = (\$10 [6] == 1'h0) || _1_ == 0 ? $signed(_1_) : $signed(6'h1a) + $signed(_1_);
  assign \$13  = \$12  - (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ast.py:2423" *) cnt;
  wire [5:0] _2_ = $signed(\$13 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed(6'h1a);
  assign \$49  = (\$13 [5] == 1'h0) || _2_ == 0 ? $signed(_2_) : $signed(6'h1a) + $signed(_2_);
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  always @(posedge clk)
    cnt <= \$15 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  always @(posedge clk)
    ring_setting <= \$16 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    rtol_swizzle = 5'h00;
    casez (\$4 [4:0])
      5'h00:
          rtol_swizzle = 5'h01;
      5'h01:
          rtol_swizzle = 5'h03;
      5'h02:
          rtol_swizzle = 5'h05;
      5'h03:
          rtol_swizzle = 5'h07;
      5'h04:
          rtol_swizzle = 5'h09;
      5'h05:
          rtol_swizzle = 5'h0b;
      5'h06:
          rtol_swizzle = 5'h02;
      5'h07:
          rtol_swizzle = 5'h0f;
      5'h08:
          rtol_swizzle = 5'h11;
      5'h09:
          rtol_swizzle = 5'h13;
      5'h0a:
          rtol_swizzle = 5'h17;
      5'h0b:
          rtol_swizzle = 5'h15;
      5'h0c:
          rtol_swizzle = 5'h19;
      5'h0d:
          rtol_swizzle = 5'h0d;
      5'h0e:
          rtol_swizzle = 5'h18;
      5'h0f:
          rtol_swizzle = 5'h04;
      5'h10:
          rtol_swizzle = 5'h08;
      5'h11:
          rtol_swizzle = 5'h16;
      5'h12:
          rtol_swizzle = 5'h06;
      5'h13:
          rtol_swizzle = 5'h00;
      5'h14:
          rtol_swizzle = 5'h0a;
      5'h15:
          rtol_swizzle = 5'h0c;
      5'h16:
          rtol_swizzle = 5'h14;
      5'h17:
          rtol_swizzle = 5'h12;
      5'h18:
          rtol_swizzle = 5'h10;
      5'h19:
          rtol_swizzle = 5'h0e;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$12  = 5'h00;
    casez (\$11 [4:0])
      5'h00:
          \$12  = 5'h13;
      5'h01:
          \$12  = 5'h00;
      5'h02:
          \$12  = 5'h06;
      5'h03:
          \$12  = 5'h01;
      5'h04:
          \$12  = 5'h0f;
      5'h05:
          \$12  = 5'h02;
      5'h06:
          \$12  = 5'h12;
      5'h07:
          \$12  = 5'h03;
      5'h08:
          \$12  = 5'h10;
      5'h09:
          \$12  = 5'h04;
      5'h0a:
          \$12  = 5'h14;
      5'h0b:
          \$12  = 5'h05;
      5'h0c:
          \$12  = 5'h15;
      5'h0d:
          \$12  = 5'h0d;
      5'h0e:
          \$12  = 5'h19;
      5'h0f:
          \$12  = 5'h07;
      5'h10:
          \$12  = 5'h18;
      5'h11:
          \$12  = 5'h08;
      5'h12:
          \$12  = 5'h17;
      5'h13:
          \$12  = 5'h09;
      5'h14:
          \$12  = 5'h16;
      5'h15:
          \$12  = 5'h0b;
      5'h16:
          \$12  = 5'h11;
      5'h17:
          \$12  = 5'h0a;
      5'h18:
          \$12  = 5'h0e;
      5'h19:
          \$12  = 5'h0c;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$15  = cnt;
    if (rst) begin
      \$15  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$16  = ring_setting;
    if (rst) begin
      \$16  = 5'h00;
    end
  end
  assign en = 1'h0;
  assign load_start = 1'h0;
  assign load_ring = 1'h0;
  assign inc = 1'h0;
  assign right_ptr = \$4 [4:0];
  assign left_ptr = \$11 [4:0];
  assign right_out = \$14 [4:0];
  assign \$20  = 1'h1;
  assign \$2  = \$18 ;
  assign \$27  = 1'h1;
  assign \$4  = \$25 ;
  assign \$5  = 1'h0;
  assign \$36  = 1'h1;
  assign \$8  = \$34 ;
  assign left_out = \$8 [4:0];
  assign \$44  = 1'h1;
  assign \$11  = \$42 ;
  assign \$51  = 1'h1;
  assign \$14  = \$49 ;
endmodule

(* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:31" *)
(* generator = "Amaranth" *)
module \top.ref (rst, right_in, left_out, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$4  = 0;
  wire [5:0] \$1 ;
  wire [6:0] \$10 ;
  wire [6:0] \$11 ;
  reg [4:0] \$12 ;
  wire [5:0] \$13 ;
  wire [5:0] \$14 ;
  reg [4:0] \$15 ;
  reg [4:0] \$16 ;
  wire [5:0] \$18 ;
  wire [5:0] \$2 ;
  wire \$20 ;
  wire [5:0] \$25 ;
  wire \$27 ;
  wire [5:0] \$3 ;
  wire [6:0] \$34 ;
  wire \$36 ;
  wire [5:0] \$4 ;
  wire [6:0] \$42 ;
  wire \$44 ;
  wire [5:0] \$49 ;
  wire \$5 ;
  wire \$51 ;
  wire [5:0] \$6 ;
  wire [6:0] \$7 ;
  wire [6:0] \$8 ;
  wire [5:0] \$9 ;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  reg [4:0] cnt = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:14" *)
  wire en;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:17" *)
  wire inc;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:13" *)
  wire is_at_turnover;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:10" *)
  wire [4:0] left_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:8" *)
  output [4:0] left_out;
  wire [4:0] left_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:27" *)
  wire [4:0] left_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:16" *)
  wire load_ring;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:15" *)
  wire load_start;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:7" *)
  input [4:0] right_in;
  wire [4:0] right_in;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:11" *)
  wire [4:0] right_out;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:22" *)
  wire [4:0] right_ptr;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  reg [4:0] ring_setting = 5'h00;
  (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:23" *)
  reg [4:0] rtol_swizzle;
  assign \$1  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 1'h1;
  assign \$18  = \$1  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:40" *) 5'h1a;
  assign is_at_turnover = cnt == (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:51" *) 5'h19;
  assign \$3  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) right_in;
  assign \$25  = \$3  % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:56" *) 5'h1a;
  assign \$6  = rtol_swizzle - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) cnt;
  assign \$7  = $signed(\$6 ) + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed({ 1'h0, ring_setting });
  wire [6:0] _0_ = $signed(\$7 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:67" *) $signed(6'h1a);
  assign \$34  = (\$7 [6] == 1'h0) || _0_ == 0 ? $signed(_0_) : $signed(6'h1a) + $signed(_0_);
  assign \$9  = cnt + (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) 1'h0;
  assign \$10  = \$9  - (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) ring_setting;
  wire [6:0] _1_ = $signed(\$10 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:70" *) $signed(6'h1a);
  assign \$42  = (\$10 [6] == 1'h0) || _1_ == 0 ? $signed(_1_) : $signed(6'h1a) + $signed(_1_);
  assign \$13  = \$12  - (* src = "/Users/virantha/dev/tinytapeout/ttsetup/env/lib/python3.12/site-packages/amaranth/hdl/_ast.py:2423" *) cnt;
  wire [5:0] _2_ = $signed(\$13 ) % (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:71" *) $signed(6'h1a);
  assign \$49  = (\$13 [5] == 1'h0) || _2_ == 0 ? $signed(_2_) : $signed(6'h1a) + $signed(_2_);
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:21" *)
  always @(posedge clk)
    cnt <= \$15 ;
  (* src = "/Users/virantha/dev/tinytapeout/tt10-enigma/src/rotor.py:24" *)
  always @(posedge clk)
    ring_setting <= \$16 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    rtol_swizzle = 5'h00;
    casez (\$4 [4:0])
      5'h00:
          rtol_swizzle = 5'h18;
      5'h01:
          rtol_swizzle = 5'h11;
      5'h02:
          rtol_swizzle = 5'h14;
      5'h03:
          rtol_swizzle = 5'h07;
      5'h04:
          rtol_swizzle = 5'h10;
      5'h05:
          rtol_swizzle = 5'h12;
      5'h06:
          rtol_swizzle = 5'h0b;
      5'h07:
          rtol_swizzle = 5'h03;
      5'h08:
          rtol_swizzle = 5'h0f;
      5'h09:
          rtol_swizzle = 5'h17;
      5'h0a:
          rtol_swizzle = 5'h0d;
      5'h0b:
          rtol_swizzle = 5'h06;
      5'h0c:
          rtol_swizzle = 5'h0e;
      5'h0d:
          rtol_swizzle = 5'h0a;
      5'h0e:
          rtol_swizzle = 5'h0c;
      5'h0f:
          rtol_swizzle = 5'h08;
      5'h10:
          rtol_swizzle = 5'h04;
      5'h11:
          rtol_swizzle = 5'h01;
      5'h12:
          rtol_swizzle = 5'h05;
      5'h13:
          rtol_swizzle = 5'h19;
      5'h14:
          rtol_swizzle = 5'h02;
      5'h15:
          rtol_swizzle = 5'h16;
      5'h16:
          rtol_swizzle = 5'h15;
      5'h17:
          rtol_swizzle = 5'h09;
      5'h18:
          rtol_swizzle = 5'h00;
      5'h19:
          rtol_swizzle = 5'h13;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$12  = 5'h00;
    casez (\$11 [4:0])
      5'h00:
          \$12  = 5'h18;
      5'h01:
          \$12  = 5'h11;
      5'h02:
          \$12  = 5'h14;
      5'h03:
          \$12  = 5'h07;
      5'h04:
          \$12  = 5'h10;
      5'h05:
          \$12  = 5'h12;
      5'h06:
          \$12  = 5'h0b;
      5'h07:
          \$12  = 5'h03;
      5'h08:
          \$12  = 5'h0f;
      5'h09:
          \$12  = 5'h17;
      5'h0a:
          \$12  = 5'h0d;
      5'h0b:
          \$12  = 5'h06;
      5'h0c:
          \$12  = 5'h0e;
      5'h0d:
          \$12  = 5'h0a;
      5'h0e:
          \$12  = 5'h0c;
      5'h0f:
          \$12  = 5'h08;
      5'h10:
          \$12  = 5'h04;
      5'h11:
          \$12  = 5'h01;
      5'h12:
          \$12  = 5'h05;
      5'h13:
          \$12  = 5'h19;
      5'h14:
          \$12  = 5'h02;
      5'h15:
          \$12  = 5'h16;
      5'h16:
          \$12  = 5'h15;
      5'h17:
          \$12  = 5'h09;
      5'h18:
          \$12  = 5'h00;
      5'h19:
          \$12  = 5'h13;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$15  = cnt;
    if (rst) begin
      \$15  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$16  = ring_setting;
    if (rst) begin
      \$16  = 5'h00;
    end
  end
  assign en = 1'h0;
  assign load_start = 1'h0;
  assign load_ring = 1'h0;
  assign inc = 1'h0;
  assign right_ptr = \$4 [4:0];
  assign left_ptr = \$11 [4:0];
  assign left_in = 5'h00;
  assign right_out = \$14 [4:0];
  assign \$20  = 1'h1;
  assign \$2  = \$18 ;
  assign \$27  = 1'h1;
  assign \$4  = \$25 ;
  assign \$5  = 1'h0;
  assign \$36  = 1'h1;
  assign \$8  = \$34 ;
  assign left_out = \$8 [4:0];
  assign \$44  = 1'h1;
  assign \$11  = \$42 ;
  assign \$51  = 1'h1;
  assign \$14  = \$49 ;
endmodule
